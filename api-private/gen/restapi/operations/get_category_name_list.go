// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	"go.uber.org/zap"
)

// GetCategoryNameListHandlerFunc turns a function with the right signature into a get category name list handler
type GetCategoryNameListHandlerFunc func(GetCategoryNameListParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCategoryNameListHandlerFunc) Handle(params GetCategoryNameListParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetCategoryNameListHandler interface for that can handle valid get category name list params
type GetCategoryNameListHandler interface {
	Handle(GetCategoryNameListParams, interface{}) middleware.Responder
}

// NewGetCategoryNameList creates a new http.Handler for the get category name list operation
func NewGetCategoryNameList(ctx *middleware.Context, handler GetCategoryNameListHandler) *GetCategoryNameList {
	return &GetCategoryNameList{Context: ctx, Handler: handler}
}

/*GetCategoryNameList swagger:route GET /categoryNames getCategoryNameList

GetCategoryNameList get category name list API

*/
type GetCategoryNameList struct {
	Context *middleware.Context
	Handler GetCategoryNameListHandler
}

func (o *GetCategoryNameList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	zap.L().Named("api").Info("GetCategoryNameList")

	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCategoryNameListParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		zap.L().Named("api").Info("GetCategoryNameList", zap.Error(err))
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		zap.L().Named("api").Info("GetCategoryNameList", zap.Error(err))
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	zap.L().Named("api").Info("GetCategoryNameList", zap.Any("request", &Params))

	res := o.Handler.Handle(Params, principal) // actually handle the request

	zap.L().Named("api").Info("GetCategoryNameList", zap.Any("response", res))

	o.Context.Respond(rw, r, route.Produces, route, res)

}
